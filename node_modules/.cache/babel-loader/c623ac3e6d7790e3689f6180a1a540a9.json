{"ast":null,"code":"import _classCallCheck from \"F:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\PROYECTOS\\\\recicla\\\\src\\\\components\\\\data_grid\\\\DataGridRow.js\";\n\n/**\r\n* CLASS DataGridRow\r\n*\r\n* Contiene una fila del datagrid\r\n*\r\n* @author Hector Morales <warrior1987@gmail.com>\r\n*/\nimport React from 'react';\nimport { detectaDispostivo } from '../configuration/GlobalFunctions';\n\nvar DataGridRow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DataGridRow, _React$Component);\n\n  function DataGridRow() {\n    _classCallCheck(this, DataGridRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DataGridRow).apply(this, arguments));\n  }\n\n  _createClass(DataGridRow, [{\n    key: \"handleEditButton\",\n    value: function handleEditButton(param) {\n      //boton editar           \n      if (this.props.automatica === 'true') {\n        this.props.funcionClick('FormDataGrid', {\n          idRow: param,\n          mainContainer: this.props.mainContainer,\n          titulo: this.props.titulo,\n          apiField: this.props.apiField,\n          formFields: this.props.formFields\n        });\n      } else {\n        this.props.funcionEdit(param, this.props.funcionEditParams);\n      }\n    }\n  }, {\n    key: \"handleNothing\",\n    value: function handleNothing() {//...\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var os = detectaDispostivo().os.toLowerCase(); //console.log(os);\n\n      var dataRow = this.props.dataRow;\n      var onClick = \"\";\n      var field = \"\";\n      var onDblClick = \"\";\n\n      if (os === 'android' || os === 'ios') {\n        onClick = this.handleEditButton.bind(this, dataRow);\n        onDblClick = this.handleNothing.bind(this);\n      } else {\n        onClick = this.handleNothing.bind(this);\n        onDblClick = this.handleEditButton.bind(this, dataRow);\n      }\n\n      return (//carga las celdas con los datos y adiciona los botones de editar y eliminar\n        React.createElement(\"tr\", {\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: onClick,\n          onDoubleClick: onDblClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          style: {\n            fontSize: '12px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, this.props.numberRow + 1), this.props.colsData.map(function (colsData, i) {\n          if (colsData.type === 'bd') {\n            field = React.createElement(\"td\", {\n              \"data-title\": _this.props.colsData[i].label,\n              key: i,\n              style: {\n                fontSize: '12px'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47\n              },\n              __self: this\n            }, dataRow[colsData.field], \"\\xA0\");\n          } else {\n            field = React.createElement(\"td\", {\n              \"data-title\": _this.props.colsData[i].label,\n              key: i,\n              style: {\n                fontSize: '12px'\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50\n              },\n              __self: this\n            });\n          }\n\n          return field;\n        }))\n      );\n    }\n  }]);\n\n  return DataGridRow;\n}(React.Component);\n\nexport default DataGridRow;","map":{"version":3,"sources":["F:\\PROYECTOS\\recicla\\src\\components\\data_grid\\DataGridRow.js"],"names":["React","detectaDispostivo","DataGridRow","param","props","automatica","funcionClick","idRow","mainContainer","titulo","apiField","formFields","funcionEdit","funcionEditParams","os","toLowerCase","dataRow","onClick","field","onDblClick","handleEditButton","bind","handleNothing","cursor","fontSize","numberRow","colsData","map","i","type","label","Component"],"mappings":"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","sourcesContent":["/**\r\n* CLASS DataGridRow\r\n*\r\n* Contiene una fila del datagrid\r\n*\r\n* @author Hector Morales <warrior1987@gmail.com>\r\n*/\r\n\r\nimport React from 'react';\r\nimport {detectaDispostivo} from '../configuration/GlobalFunctions';\r\n\r\nclass DataGridRow extends React.Component {    \r\n    handleEditButton(param){//boton editar           \r\n        if(this.props.automatica === 'true'){\r\n            this.props.funcionClick('FormDataGrid',{ idRow:param,mainContainer:this.props.mainContainer,titulo:this.props.titulo,apiField:this.props.apiField,formFields:this.props.formFields});       \r\n        } \r\n        else{            \r\n            this.props.funcionEdit(param,this.props.funcionEditParams);            \r\n        }\r\n    }    \r\n    handleNothing(){\r\n        //...\r\n    }\r\n    render() {         \r\n        var os = detectaDispostivo().os.toLowerCase();\r\n        //console.log(os);\r\n        var dataRow = this.props.dataRow;   \r\n        var onClick = \"\";\r\n        var field = \"\";\r\n        var onDblClick = \"\";\r\n\r\n        if(os === 'android' || os === 'ios'){           \r\n            onClick = this.handleEditButton.bind(this,dataRow);\r\n            onDblClick = this.handleNothing.bind(this);\r\n        } \r\n        else{            \r\n            onClick = this.handleNothing.bind(this);\r\n            onDblClick = this.handleEditButton.bind(this,dataRow);\r\n        }       \r\n\r\n        return(//carga las celdas con los datos y adiciona los botones de editar y eliminar\r\n            <tr style={{ cursor:'pointer'}} onClick={ onClick } onDoubleClick={ onDblClick }>      \r\n                <td style={{fontSize:'12px'}}>{this.props.numberRow+1}</td> \r\n                {\r\n                    this.props.colsData.map((colsData,i) => {\r\n                        if(colsData.type === 'bd'){\r\n                            field = <td data-title={this.props.colsData[i].label} key={ i } style={{fontSize:'12px'}}>{dataRow[colsData.field]}&nbsp;</td>\r\n                        }\r\n                        else{\r\n                            field = <td data-title={this.props.colsData[i].label} key={ i } style={{fontSize:'12px'}}>\r\n                                        \r\n                                    </td>\r\n                        }\r\n                        return field;\r\n                        \r\n                        \r\n                    })\r\n                }    \r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DataGridRow"]},"metadata":{},"sourceType":"module"}