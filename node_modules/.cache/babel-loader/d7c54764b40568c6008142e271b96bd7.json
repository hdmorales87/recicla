{"ast":null,"code":"import _classCallCheck from \"F:\\\\PROYECTOS\\\\chatarreria-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\PROYECTOS\\\\chatarreria-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\PROYECTOS\\\\chatarreria-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\PROYECTOS\\\\chatarreria-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\PROYECTOS\\\\chatarreria-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"F:\\\\PROYECTOS\\\\chatarreria-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"F:\\\\PROYECTOS\\\\chatarreria-front\\\\src\\\\components\\\\desktop\\\\Desktop.js\";\n\n/**\r\n* CLASS Desktop\r\n*\r\n* Contiene el escritorio de la aplicacion\r\n*\r\n* @author Hector Morales <warrior1987@gmail.com>\r\n*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport NameUser from './NameUser';\nimport OptionMenu from './OptionMenu';\nimport configJson from '../configuration/configuration.json';\nimport globalState from '../configuration/GlobalState';\nimport { checkSession, cargarFilas } from '../api_calls/ApiCalls';\nimport Container from './Container';\nimport logo_login from '../../images/logo_login.png?v1.0';\nimport alertify from 'alertifyjs';\nimport '../../css/alertify.css';\nimport './desktop.css';\n\nvar Desktop =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Desktop, _Component);\n\n  function Desktop(props) {\n    var _this;\n\n    _classCallCheck(this, Desktop);\n\n    //al cargarse trae los datos del usuario \t\t\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Desktop).call(this, props));\n    var usuario = _this.props.location.state.usuario;\n    _this.state = {\n      loading: true,\n      redirect: false,\n      componente: \"WelcomePage\",\n      parametro: \"\"\n    };\n    checkSession().then(function (res) {\n      var response = res.data;\n\n      if (response.session === \"true\") {\n        cargarFilas('users', usuario, 1, 0).then(function (res) {\n          var response = res.data;\n\n          if (response.msg === \"error\") {//alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: '+response.detail);\n          } else {\n            //globalState.getState().userData[0] =\n            globalState.dispatch({\n              type: \"userData\",\n              params: response\n            });\n            console.log('holalala');\n            console.log(globalState.getState().userData);\n          }\n        }).catch(function (err) {//alertify.alert('Error!', 'No se ha logrado la conexion con el servidor!<br />'+err);\n        });\n\n        _this.setState({\n          loading: false\n        });\n      } else {\n        _this.setState({\n          loading: false,\n          redirect: true\n        });\n      }\n    }).catch(function (err) {\n      console.error(err);\n\n      _this.setState({\n        loading: false,\n        redirect: true\n      });\n    });\n    _this.actualizarContainer = _this.actualizarContainer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Desktop, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {//cada que se monte el escritorio debe validar la sesion       \n      // \tcheckSession()\n      // .then(res => {\n      //       var response = res.data; \n      //   \tif (response.session === \"true\") {\n      //   \t  \tthis.setState({ loading: false, redirect: false });\n      //   \t} else {\n      //   \t  \tthis.setState({ loading: false, redirect: true });\n      //   \t}\n      // })\n      // .catch(err => {\n      //   \tconsole.error(err);\n      //   \tthis.setState({ loading: false, redirect: true });\n      // });            \n    }\n  }, {\n    key: \"actualizarContainer\",\n    value: function actualizarContainer(val, param) {\n      //carga dinamica del lado derecho\t\n      this.setState({\n        componente: val\n      });\n      this.setState({\n        parametro: param\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          redirect = _this$state.redirect;\n\n      if (loading) {\n        return null;\n      }\n\n      if (redirect) {\n        //sesion inexistente, cargar login\n        alert('Su sesion ha finalizado, debe registrarse de nuevo!');\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      }\n\n      return (//carga el entorno del escritorio, barra de menu, barra superior y contenedor \t  \t\t  \n        React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"pestanas\",\n          className: \"navigationDesk\",\n          style: {\n            backgroundColor: configJson.fondoMenu\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"LogoCabecera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: logo_login,\n          alt: \"Recicla\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        })), React.createElement(OptionMenu, {\n          funcionClick: this.actualizarContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          id: \"cabeceraDesk\",\n          className: \"cabeceraDesk\",\n          style: {\n            backgroundColor: configJson.fondoCabecera\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(NameUser, {\n          className: \"ContentUser\",\n          history: this.props.history,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          id: \"contenidopestanas\",\n          className: \"contentDesk\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(Container, {\n          componente: this.state.componente,\n          funcionClick: this.actualizarContainer,\n          parametro: this.state.parametro,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        })))\n      );\n    }\n  }]);\n\n  return Desktop;\n}(Component);\n\nexport default Desktop;","map":{"version":3,"sources":["F:\\PROYECTOS\\chatarreria-front\\src\\components\\desktop\\Desktop.js"],"names":["React","Component","Redirect","NameUser","OptionMenu","configJson","globalState","checkSession","cargarFilas","Container","logo_login","alertify","Desktop","props","usuario","location","state","loading","redirect","componente","parametro","then","res","response","data","session","msg","dispatch","type","params","console","log","getState","userData","catch","err","setState","error","actualizarContainer","bind","val","param","alert","backgroundColor","fondoMenu","fondoCabecera","history"],"mappings":"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","sourcesContent":["/**\r\n* CLASS Desktop\r\n*\r\n* Contiene el escritorio de la aplicacion\r\n*\r\n* @author Hector Morales <warrior1987@gmail.com>\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport NameUser from './NameUser';\r\nimport OptionMenu from './OptionMenu';\r\nimport configJson from '../configuration/configuration.json';\r\nimport globalState from '../configuration/GlobalState';\r\nimport {checkSession,cargarFilas} from '../api_calls/ApiCalls';\r\nimport Container from './Container';\r\nimport logo_login from '../../images/logo_login.png?v1.0';\r\nimport alertify from 'alertifyjs';\r\nimport '../../css/alertify.css';\r\nimport './desktop.css'; \r\n\r\nclass Desktop extends Component {\r\n\t  constructor(props) {//al cargarse trae los datos del usuario \t\t\r\n      \tsuper(props);  \r\n        var usuario = this.props.location.state.usuario;              \r\n      \tthis.state = { \r\n      \t\t  loading: true,\r\n          \tredirect: false,\t \t\t                \r\n      \t \t  componente: \"WelcomePage\",\r\n      \t \t  parametro : \"\" \r\n\t      }; \r\n        checkSession()\r\n        .then(res => {\r\n            var response = res.data; \r\n            if (response.session === \"true\") {\r\n                cargarFilas('users',usuario,1,0).then(res => {\r\n                    var response = res.data; \r\n                    if (response.msg === \"error\") {\r\n                        //alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: '+response.detail);\r\n                    } else { \r\n                        //globalState.getState().userData[0] =\r\n                        globalState.dispatch({\r\n                            type   : \"userData\",\r\n                            params : response\r\n                        });\r\n                        console.log('holalala');\r\n                        console.log(globalState.getState().userData);            \r\n                    }\r\n                })\r\n                .catch( err => {            \r\n                    //alertify.alert('Error!', 'No se ha logrado la conexion con el servidor!<br />'+err);\r\n                });\r\n                this.setState({ loading: false });\r\n            } else {\r\n                this.setState({ loading: false, redirect: true });\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            this.setState({ loading: false, redirect: true });\r\n        });         \r\n\r\n\t      this.actualizarContainer = this.actualizarContainer.bind(this);\t\r\n\t  } \r\n\t  componentDidMount() {//cada que se monte el escritorio debe validar la sesion       \r\n      // \tcheckSession()\r\n  \t  \t// .then(res => {\r\n      //       var response = res.data; \r\n  \t  \t//   \tif (response.session === \"true\") {\r\n  \t  \t//   \t  \tthis.setState({ loading: false, redirect: false });\r\n  \t  \t//   \t} else {\r\n  \t  \t//   \t  \tthis.setState({ loading: false, redirect: true });\r\n  \t  \t//   \t}\r\n  \t  \t// })\r\n  \t  \t// .catch(err => {\r\n  \t  \t//   \tconsole.error(err);\r\n  \t  \t//   \tthis.setState({ loading: false, redirect: true });\r\n  \t  \t// });            \r\n    }\t\r\n\t  actualizarContainer(val,param){//carga dinamica del lado derecho\t\r\n\t\t    this.setState({ componente: val });\r\n\t\t    this.setState({ parametro : param });\t\t\r\n\t  }\t\r\n  \trender() {\r\n  \t\t  const { loading, redirect } = this.state;        \r\n  \t\t  if (loading) {\r\n        \t  return null;\r\n      \t}\r\n      \tif (redirect) {//sesion inexistente, cargar login\r\n            alert('Su sesion ha finalizado, debe registrarse de nuevo!');\r\n        \t  return <Redirect to=\"/\" />;\r\n      \t}  \t\t\t \t\t\r\n  \t  \treturn (//carga el entorno del escritorio, barra de menu, barra superior y contenedor \t  \t\t  \r\n  \t  \t\t  <div className=\"App\">                 \r\n\t \t\t          <div id=\"pestanas\" className=\"navigationDesk\" style={{backgroundColor:configJson.fondoMenu}}>\r\n\t \t\t          \t  <div className=\"LogoCabecera\">\r\n\t \t\t          \t  \t  <img src={ logo_login } alt=\"Recicla\" />\r\n\t \t\t          \t  </div>\r\n\t \t\t          \t  <OptionMenu funcionClick = {this.actualizarContainer}/>\r\n\t \t\t          </div>\r\n\t \t\t          <div id=\"cabeceraDesk\" className=\"cabeceraDesk\" style={{backgroundColor:configJson.fondoCabecera}}>\r\n\t \t\t          \t  <NameUser className=\"ContentUser\" history={this.props.history}/>  \t    \t\t\r\n\t \t\t          </div>\r\n\t    \t\t      <div id=\"contenidopestanas\" className=\"contentDesk\">\r\n\t    \t\t \t        <Container componente={this.state.componente} funcionClick = {this.actualizarContainer} parametro={this.state.parametro}/>\r\n\t    \t\t      </div>\t \t\t     \r\n\t          </div>   \t\r\n\t\t    );\r\n  \t}\r\n}\r\n\r\nexport default Desktop"]},"metadata":{},"sourceType":"module"}