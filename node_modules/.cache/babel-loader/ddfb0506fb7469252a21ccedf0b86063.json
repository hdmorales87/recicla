{"ast":null,"code":"import _classCallCheck from \"F:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\PROYECTOS\\\\recicla\\\\src\\\\components\\\\dashboard\\\\DashboardContainer.js\";\n\n/**\r\n* CLASS DashboardContainer\r\n*\r\n* Contiene el contenedor con los indicadores\r\n*\r\n* @author Hector Morales <warrior1987@gmail.com>\r\n*/\nimport React, { Component } from 'react';\nimport DashboardOption from './DashboardOption';\nimport { indicadorCompras, indicadorVentas, indicadorGraficoCompras, indicadorGraficoVentas } from '../api_calls/ApiCalls';\nimport alertify from 'alertifyjs';\nimport '../../css/alertify.css';\nimport './dashboard.css';\n\nvar DashboardContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DashboardContainer, _Component);\n\n  function DashboardContainer(props) {\n    var _this;\n\n    _classCallCheck(this, DashboardContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DashboardContainer).call(this, props));\n    _this.state = {\n      indicadorCompras1: 0,\n      indicadorVentas1: 0,\n      indicadorCompras2: 0,\n      indicadorVentas2: 0,\n      graficoCompras1: [],\n      graficoVentas1: [],\n      graficoCompras2: [],\n      graficoVentas2: []\n    };\n\n    _this.cargarIndicadores(_this.props.date1, _this.props.date2);\n\n    return _this;\n  }\n\n  _createClass(DashboardContainer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props !== prevProps) {\n        this.cargarIndicadores(this.props.date1, this.props.date2);\n      }\n    }\n  }, {\n    key: \"cargarIndicadores\",\n    value: function cargarIndicadores(date1, date2) {\n      var _this2 = this;\n\n      //cargar los indicadores\n      //formato de la fecha\n      date1 = new Date(date1.getTime() - date1.getTimezoneOffset() * 60000).toISOString().split(\"T\")[0];\n      date2 = new Date(date2.getTime() - date2.getTimezoneOffset() * 60000).toISOString().split(\"T\")[0]; //cargar los indicadores      \n\n      indicadorCompras1(date1, date2).then(function (res) {\n        var response = res.data;\n\n        if (response.msg === \"error\") {\n          alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: ' + response.detail);\n        } else {\n          _this2.setState({\n            indicadorCompras1: response[0].total\n          });\n        }\n      }).catch(function (err) {\n        alertify.alert('Error!', 'No se ha logrado la conexion con el servidorttt!<br />' + err);\n      });\n      indicadorCompras2(date1, date2).then(function (res) {\n        var response = res.data;\n\n        if (response.msg === \"error\") {\n          alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: ' + response.detail);\n        } else {\n          _this2.setState({\n            indicadorCompras2: response[0].total\n          });\n        }\n      }).catch(function (err) {\n        alertify.alert('Error!', 'No se ha logrado la conexion con el servidorttt!<br />' + err);\n      });\n      indicadorVentas1(date1, date2).then(function (res) {\n        var response = res.data;\n\n        if (response.msg === \"error\") {\n          alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: ' + response.detail);\n        } else {\n          _this2.setState({\n            indicadorVentas1: response[0].total\n          });\n        }\n      }).catch(function (err) {\n        alertify.alert('Error!', 'No se ha logrado la conexion con el servidorxxx!<br />' + err);\n      });\n      indicadorVentas2(date1, date2).then(function (res) {\n        var response = res.data;\n\n        if (response.msg === \"error\") {\n          alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: ' + response.detail);\n        } else {\n          _this2.setState({\n            indicadorVentas2: response[0].total\n          });\n        }\n      }).catch(function (err) {\n        alertify.alert('Error!', 'No se ha logrado la conexion con el servidorxxx!<br />' + err);\n      });\n      indicadorGraficoCompras(date1, date2).then(function (res) {\n        var response = res.data;\n\n        if (response.msg === \"error\") {\n          alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: ' + response.detail);\n        } else {\n          var arrayCompras = [['Producto', 'Total']];\n\n          for (var i in response) {\n            arrayCompras.push([response[i].tipo_producto, response[i].total]);\n          }\n\n          _this2.setState({\n            graficoCompras: arrayCompras\n          });\n        }\n      }).catch(function (err) {\n        alertify.alert('Error!', 'No se ha logrado la conexion con el servidorrrrrr!<br />' + err);\n      });\n      indicadorGraficoVentas(date1, date2).then(function (res) {\n        var response = res.data;\n\n        if (response.msg === \"error\") {\n          alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: ' + response.detail);\n        } else {\n          var arrayVentas = [['Producto', 'Total']];\n\n          for (var i in response) {\n            arrayVentas.push([response[i].tipo_producto, response[i].total]);\n          }\n\n          _this2.setState({\n            graficoVentas: arrayVentas\n          });\n        }\n      }).catch(function (err) {\n        alertify.alert('Error!', 'No se ha logrado la conexion con el servidor!<br />' + err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //LOS TIPOS DE GRAFICO SON PieChart y ColumnChart                    \n      return React.createElement(\"div\", {\n        id: \"DashboardContenedor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(DashboardOption, {\n        titulo: \"Compras\",\n        tipo: \"cifra\",\n        valor: this.state.indicadorCompras1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(DashboardOption, {\n        titulo: \"Comprado\",\n        tipo: \"cifra\",\n        valor: this.state.indicadorCompras2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), React.createElement(DashboardOption, {\n        titulo: \"Ventas\",\n        tipo: \"cifra\",\n        valor: this.state.indicadorVentas1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(DashboardOption, {\n        titulo: \"Ventas\",\n        tipo: \"cifra\",\n        valor: this.state.indicadorVentas2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(DashboardOption, {\n        titulo: \"Compras\",\n        tipo: \"grafico\",\n        chartProps: [{\n          chartType: \"PieChart\",\n          width: '320px',\n          height: '200px',\n          loader: 'Cargando...',\n          data: this.state.graficoCompras1,\n          options: {\n            title: 'Compras por Producto',\n            chartArea: {\n              left: -10,\n              top: 30,\n              width: \"100%\",\n              height: \"60%\"\n            },\n            legend: {\n              position: \"left\",\n              alignment: \"start\",\n              width: \"500px\",\n              textStyle: {\n                color: \"000000\",\n                fontSize: 12\n              }\n            }\n          },\n          rootProps: {\n            'data-testid': '1'\n          }\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(DashboardOption, {\n        titulo: \"Compras\",\n        tipo: \"grafico\",\n        chartProps: [{\n          chartType: \"PieChart\",\n          width: '320px',\n          height: '200px',\n          loader: 'Cargando...',\n          data: this.state.graficoCompras2,\n          options: {\n            title: 'Compras por Producto',\n            chartArea: {\n              left: -10,\n              top: 30,\n              width: \"100%\",\n              height: \"60%\"\n            },\n            legend: {\n              position: \"left\",\n              alignment: \"start\",\n              width: \"500px\",\n              textStyle: {\n                color: \"000000\",\n                fontSize: 12\n              }\n            }\n          },\n          rootProps: {\n            'data-testid': '1'\n          }\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(DashboardOption, {\n        titulo: \"Ventas\",\n        tipo: \"grafico\",\n        chartProps: [{\n          chartType: \"PieChart\",\n          width: '320px',\n          height: '200px',\n          loader: 'Cargando...',\n          data: this.state.graficoVentas1,\n          options: {\n            title: 'Ventas por Producto',\n            chartArea: {\n              left: -10,\n              top: 30,\n              width: \"100%\",\n              height: \"60%\"\n            },\n            legend: {\n              position: \"left\",\n              alignment: \"start\",\n              width: \"500px\",\n              textStyle: {\n                color: \"000000\",\n                fontSize: 12\n              }\n            }\n          },\n          rootProps: {\n            'data-testid': '1'\n          }\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(DashboardOption, {\n        titulo: \"Ventas\",\n        tipo: \"grafico\",\n        chartProps: [{\n          chartType: \"PieChart\",\n          width: '320px',\n          height: '200px',\n          loader: 'Cargando...',\n          data: this.state.graficoVentas2,\n          options: {\n            title: 'Ventas por Producto',\n            chartArea: {\n              left: -10,\n              top: 30,\n              width: \"100%\",\n              height: \"60%\"\n            },\n            legend: {\n              position: \"left\",\n              alignment: \"start\",\n              width: \"500px\",\n              textStyle: {\n                color: \"000000\",\n                fontSize: 12\n              }\n            }\n          },\n          rootProps: {\n            'data-testid': '1'\n          }\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return DashboardContainer;\n}(Component);\n\nexport default DashboardContainer;","map":{"version":3,"sources":["F:\\PROYECTOS\\recicla\\src\\components\\dashboard\\DashboardContainer.js"],"names":["React","Component","DashboardOption","indicadorCompras","indicadorVentas","indicadorGraficoCompras","indicadorGraficoVentas","alertify","DashboardContainer","props","state","indicadorCompras1","indicadorVentas1","indicadorCompras2","indicadorVentas2","graficoCompras1","graficoVentas1","graficoCompras2","graficoVentas2","cargarIndicadores","date1","date2","prevProps","Date","getTime","getTimezoneOffset","toISOString","split","then","res","response","data","msg","alert","detail","setState","total","catch","err","arrayCompras","i","push","tipo_producto","graficoCompras","arrayVentas","graficoVentas","chartType","width","height","loader","options","title","chartArea","left","top","legend","position","alignment","textStyle","color","fontSize","rootProps"],"mappings":"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","sourcesContent":["/**\r\n* CLASS DashboardContainer\r\n*\r\n* Contiene el contenedor con los indicadores\r\n*\r\n* @author Hector Morales <warrior1987@gmail.com>\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport DashboardOption from './DashboardOption';\r\nimport {indicadorCompras,indicadorVentas,indicadorGraficoCompras,indicadorGraficoVentas} from '../api_calls/ApiCalls';\r\nimport alertify from 'alertifyjs';\r\nimport '../../css/alertify.css';\r\nimport './dashboard.css';\r\n\r\nclass DashboardContainer extends Component {\r\n    constructor(props){\r\n        super(props);  \r\n        this.state={\r\n            indicadorCompras1 : 0,\r\n            indicadorVentas1  : 0,\r\n            indicadorCompras2 : 0,\r\n            indicadorVentas2  : 0,\r\n            graficoCompras1 : [],\r\n            graficoVentas1  : [],\r\n            graficoCompras2 : [],\r\n            graficoVentas2  : []\r\n        };\r\n        this.cargarIndicadores(this.props.date1,this.props.date2);    \r\n    }\r\n    componentDidUpdate(prevProps){   \r\n        if (this.props !== prevProps) {           \r\n           this.cargarIndicadores(this.props.date1,this.props.date2); \r\n        }\r\n    }\r\n    cargarIndicadores(date1,date2){  //cargar los indicadores\r\n        //formato de la fecha\r\n        date1 = new Date(date1.getTime() - (date1.getTimezoneOffset() * 60000 )).toISOString().split(\"T\")[0];\r\n        date2 = new Date(date2.getTime() - (date2.getTimezoneOffset() * 60000 )).toISOString().split(\"T\")[0];\r\n        //cargar los indicadores      \r\n        indicadorCompras1(date1,date2)\r\n        .then(res => {\r\n            var response = res.data; \r\n            if (response.msg === \"error\") {\r\n                alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: '+response.detail);\r\n            } else {                           \r\n                this.setState({ indicadorCompras1: response[0].total });                \r\n            }\r\n        })\r\n        .catch( err => {            \r\n            alertify.alert('Error!', 'No se ha logrado la conexion con el servidorttt!<br />'+err);\r\n        });\r\n\r\n        indicadorCompras2(date1,date2)\r\n        .then(res => {\r\n            var response = res.data; \r\n            if (response.msg === \"error\") {\r\n                alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: '+response.detail);\r\n            } else {                           \r\n                this.setState({ indicadorCompras2: response[0].total });                \r\n            }\r\n        })\r\n        .catch( err => {            \r\n            alertify.alert('Error!', 'No se ha logrado la conexion con el servidorttt!<br />'+err);\r\n        });\r\n\r\n        indicadorVentas1(date1,date2)\r\n        .then(res => {\r\n            var response = res.data; \r\n            if (response.msg === \"error\") {\r\n                alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: '+response.detail);\r\n            } else {     \r\n                this.setState({ indicadorVentas1: response[0].total });                \r\n            }\r\n        })\r\n        .catch( err => {            \r\n            alertify.alert('Error!', 'No se ha logrado la conexion con el servidorxxx!<br />'+err);\r\n        });\r\n\r\n        indicadorVentas2(date1,date2)\r\n        .then(res => {\r\n            var response = res.data; \r\n            if (response.msg === \"error\") {\r\n                alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: '+response.detail);\r\n            } else {     \r\n                this.setState({ indicadorVentas2: response[0].total });                \r\n            }\r\n        })\r\n        .catch( err => {            \r\n            alertify.alert('Error!', 'No se ha logrado la conexion con el servidorxxx!<br />'+err);\r\n        });\r\n\r\n        indicadorGraficoCompras(date1,date2)\r\n        .then(res => {\r\n            var response = res.data; \r\n            if (response.msg === \"error\") {\r\n                alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: '+response.detail);\r\n            } else {                \r\n                var arrayCompras = [['Producto', 'Total']];                \r\n                for(var i in response){\r\n                    arrayCompras.push([response[i].tipo_producto,response[i].total]);                    \r\n                }                                \r\n                this.setState({ graficoCompras: arrayCompras })\r\n            }\r\n        })\r\n        .catch( err => {            \r\n            alertify.alert('Error!', 'No se ha logrado la conexion con el servidorrrrrr!<br />'+err);\r\n        });\r\n\r\n        indicadorGraficoVentas(date1,date2)\r\n        .then(res => {\r\n            var response = res.data; \r\n            if (response.msg === \"error\") {\r\n                alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: '+response.detail);\r\n            } else {                \r\n                var arrayVentas = [['Producto', 'Total']];                \r\n                for(var i in response){\r\n                    arrayVentas.push([response[i].tipo_producto,response[i].total]);                    \r\n                }                             \r\n                this.setState({ graficoVentas: arrayVentas })\r\n            }\r\n        })\r\n        .catch( err => {            \r\n            alertify.alert('Error!', 'No se ha logrado la conexion con el servidor!<br />'+err);\r\n        });\r\n    }\r\n  \trender() {\r\n        //LOS TIPOS DE GRAFICO SON PieChart y ColumnChart                    \r\n        return ( \r\n            <div id=\"DashboardContenedor\">\r\n                    <ul>\r\n                        <DashboardOption                              \r\n                            titulo='Compras'                            \r\n                            tipo=\"cifra\" \r\n                            valor={this.state.indicadorCompras1}\r\n                        /> \r\n                        <DashboardOption                              \r\n                            titulo='Comprado'                            \r\n                            tipo=\"cifra\" \r\n                            valor={this.state.indicadorCompras2}\r\n                        />   \r\n                        <DashboardOption                             \r\n                            titulo='Ventas'                             \r\n                            tipo=\"cifra\" \r\n                            valor={this.state.indicadorVentas1}\r\n                        />\r\n                        <DashboardOption                             \r\n                            titulo='Ventas'                             \r\n                            tipo=\"cifra\" \r\n                            valor={this.state.indicadorVentas2}\r\n                        />                           \r\n                        <DashboardOption                             \r\n                            titulo='Compras'                            \r\n                            tipo=\"grafico\"                                                 \r\n                            chartProps= {[\r\n                                            {\r\n                                                chartType : \"PieChart\",\r\n                                                width     : '320px',\r\n                                                height    : '200px',\r\n                                                loader    : 'Cargando...',\r\n                                                data      :  this.state.graficoCompras1,\r\n                                                options    : {\r\n                                                                 title: 'Compras por Producto',\r\n                                                                 chartArea: {\r\n                                                                    left: -10,\r\n                                                                    top: 30,\r\n                                                                    width: \"100%\",\r\n                                                                    height: \"60%\"\r\n                                                                 },\r\n                                                                 legend: {\r\n                                                                    position: \"left\",\r\n                                                                    alignment: \"start\",\r\n                                                                    width: \"500px\",\r\n                                                                    textStyle: {\r\n                                                                      color: \"000000\",\r\n                                                                      fontSize: 12\r\n                                                                    }\r\n                                                                  },\r\n                                                             },\r\n                                                rootProps  : { \r\n                                                                 'data-testid': '1' \r\n                                                             }\r\n                                            }    \r\n                                         ]}  \r\n                        />\r\n                         <DashboardOption                             \r\n                            titulo='Compras'                            \r\n                            tipo=\"grafico\"                                                 \r\n                            chartProps= {[\r\n                                            {\r\n                                                chartType : \"PieChart\",\r\n                                                width     : '320px',\r\n                                                height    : '200px',\r\n                                                loader    : 'Cargando...',\r\n                                                data      :  this.state.graficoCompras2,\r\n                                                options    : {\r\n                                                                 title: 'Compras por Producto',\r\n                                                                 chartArea: {\r\n                                                                    left: -10,\r\n                                                                    top: 30,\r\n                                                                    width: \"100%\",\r\n                                                                    height: \"60%\"\r\n                                                                 },\r\n                                                                 legend: {\r\n                                                                    position: \"left\",\r\n                                                                    alignment: \"start\",\r\n                                                                    width: \"500px\",\r\n                                                                    textStyle: {\r\n                                                                      color: \"000000\",\r\n                                                                      fontSize: 12\r\n                                                                    }\r\n                                                                  },\r\n                                                             },\r\n                                                rootProps  : { \r\n                                                                 'data-testid': '1' \r\n                                                             }\r\n                                            }    \r\n                                         ]}  \r\n                        />\r\n                        <DashboardOption                            \r\n                            titulo='Ventas'                              \r\n                            tipo=\"grafico\"                                                 \r\n                            chartProps= {[\r\n                                            {\r\n                                                chartType : \"PieChart\",\r\n                                                width     : '320px',\r\n                                                height    : '200px',\r\n                                                loader    : 'Cargando...',\r\n                                                data      :  this.state.graficoVentas1,\r\n                                                options    : {\r\n                                                                 title: 'Ventas por Producto',\r\n                                                                 chartArea: {\r\n                                                                    left: -10,\r\n                                                                    top: 30,\r\n                                                                    width: \"100%\",\r\n                                                                    height: \"60%\"\r\n                                                                 },\r\n                                                                 legend: {\r\n                                                                    position: \"left\",\r\n                                                                    alignment: \"start\",\r\n                                                                    width: \"500px\",\r\n                                                                    textStyle: {\r\n                                                                      color: \"000000\",\r\n                                                                      fontSize: 12\r\n                                                                    }\r\n                                                                  },\r\n                                                             },\r\n                                                rootProps  : { \r\n                                                                 'data-testid': '1' \r\n                                                             }\r\n                                            }    \r\n                                         ]}  \r\n                        />   \r\n                        <DashboardOption                            \r\n                            titulo='Ventas'                              \r\n                            tipo=\"grafico\"                                                 \r\n                            chartProps= {[\r\n                                            {\r\n                                                chartType : \"PieChart\",\r\n                                                width     : '320px',\r\n                                                height    : '200px',\r\n                                                loader    : 'Cargando...',\r\n                                                data      :  this.state.graficoVentas2,\r\n                                                options    : {\r\n                                                                 title: 'Ventas por Producto',\r\n                                                                 chartArea: {\r\n                                                                    left: -10,\r\n                                                                    top: 30,\r\n                                                                    width: \"100%\",\r\n                                                                    height: \"60%\"\r\n                                                                 },\r\n                                                                 legend: {\r\n                                                                    position: \"left\",\r\n                                                                    alignment: \"start\",\r\n                                                                    width: \"500px\",\r\n                                                                    textStyle: {\r\n                                                                      color: \"000000\",\r\n                                                                      fontSize: 12\r\n                                                                    }\r\n                                                                  },\r\n                                                             },\r\n                                                rootProps  : { \r\n                                                                 'data-testid': '1' \r\n                                                             }\r\n                                            }    \r\n                                         ]}  \r\n                        />                    \r\n                    </ul>\r\n                </div>\r\n        );\r\n    } \r\n}\r\n\r\nexport default DashboardContainer\r\n"]},"metadata":{},"sourceType":"module"}