{"ast":null,"code":"import _classCallCheck from \"D:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\PROYECTOS\\\\recicla\\\\src\\\\components\\\\desktop\\\\Desktop.js\";\n\n/**\r\n* CLASS Desktop\r\n*\r\n* Contiene el escritorio de la aplicacion\r\n*\r\n* @author Hector Morales <warrior1987@gmail.com>\r\n*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport NameUser from './NameUser';\nimport OptionMenu from './OptionMenu';\nimport MaterialIcon from 'material-icons-react';\nimport Modal from 'react-modal';\nimport configJson from '../configuration/configuration.json';\nimport globalState from '../configuration/GlobalState';\nimport { checkSession, cargarFilas, validaEmpresa } from '../api_calls/ApiCalls';\nimport loadingImg from '../../images/loading.gif?v1.0';\nimport Container from './Container';\nimport alertify from 'alertifyjs';\nimport '../../css/alertify.css';\nimport './desktop.css?v1.5';\nvar stylesLoading = {\n  content: {\n    top: '50%',\n    left: '50%',\n    width: '202px',\n    height: '202px',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    padding: '0px',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nvar Desktop =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Desktop, _Component);\n\n  function Desktop(props) {\n    var _this;\n\n    _classCallCheck(this, Desktop);\n\n    //al cargarse trae los datos del usuario \t\t\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Desktop).call(this, props));\n    _this.state = {\n      loading: true,\n      redirect: false,\n      componente: \"WelcomePage\",\n      parametro: \"\",\n      checkMenu: false,\n      showLoading: false\n    };\n    var usuario = '';\n    var empresa = '';\n\n    if (_this.props.location.state !== undefined) {\n      usuario = _this.props.location.state.usuario;\n      empresa = _this.props.location.state.empresa;\n    }\n\n    checkSession().then(function (res) {\n      var response = res.data;\n\n      if (response.session === \"true\") {\n        cargarFilas('users', usuario, 1, 0).then(function (res) {\n          var response = res.data;\n\n          if (response.msg === \"error\") {\n            alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: ' + response.detail);\n          } else {\n            validaEmpresa(empresa).then(function (res) {\n              var response1 = res.data;\n\n              if (response1.msg === 'notExist') {\n                //aqui no me dejara continuar si la empresa noe xiste\n                alertify.error('La empresa no existe!'); //this.inputEmpresa.current.focus();\n              } else if (response1.msg === 'error') {\n                //aqui no me dejara continuar si hay un error\n                alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: ' + response.detail); //this.inputEmpresa.current.focus();\n              } else {\n                //this.setState({id_empresa: response[0].id}); //CARGAR EL ID EMPRESA  \n                _this.setState({\n                  loading: false\n                }, function () {\n                  globalState.dispatch({\n                    type: \"userData\",\n                    params: response\n                  });\n                  globalState.dispatch({\n                    type: \"companyData\",\n                    params: response1\n                  });\n                });\n              }\n            }).catch(function (err) {\n              alertify.alert('Error!', 'No se ha logrado la conexion con el servidor!<br />' + err);\n            });\n          }\n        }).catch(function (err) {\n          alertify.alert('Error!', 'No se ha logrado la conexion con el servidor!<br />' + err);\n        });\n      } else {\n        _this.setState({\n          loading: false,\n          redirect: true\n        });\n      }\n    }).catch(function (err) {\n      console.error(err);\n\n      _this.setState({\n        loading: false,\n        redirect: true\n      });\n    });\n    _this.actualizarContainer = _this.actualizarContainer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    globalState.subscribe(function () {\n      if (globalState.getState().type === \"menuNavegacion\") {\n        _this.setState({\n          checkMenu: globalState.getState().menuNavegacion\n        });\n      }\n    });\n    return _this;\n  }\n\n  _createClass(Desktop, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //cada que se monte el escritorio debe alistar la ventana del loading      \n      //... \n      this.unsubscribe1 = globalState.subscribe(function () {\n        if (globalState.getState().type === \"modalLoading2\") {\n          _this2.setState({\n            showLoading: globalState.getState().modalLoading2\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe1();\n    }\n  }, {\n    key: \"actualizarContainer\",\n    value: function actualizarContainer(val, param) {\n      //carga dinamica del lado derecho\t\n      this.setState({\n        componente: val\n      });\n      this.setState({\n        parametro: param\n      });\n    }\n  }, {\n    key: \"handleButtonMenu\",\n    value: function handleButtonMenu(e) {\n      //el boton que muestra esconde la barra de navegacion   \n      var opcionCheck = true;\n\n      if (this.state.checkMenu === true) {\n        opcionCheck = false;\n      }\n\n      globalState.dispatch({\n        type: \"menuNavegacion\",\n        params: opcionCheck\n      });\n    }\n  }, {\n    key: \"changeNavigationTrigger\",\n    value: function changeNavigationTrigger(e) {//........\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loading = _this$state.loading,\n          redirect = _this$state.redirect;\n\n      if (loading) {\n        return null;\n      }\n\n      if (redirect) {\n        //sesion inexistente, cargar login\n        alert('Su sesion ha finalizado, debe registrarse de nuevo!');\n        return React.createElement(Redirect, {\n          to: \"/recicla/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        });\n      }\n\n      return (//carga el entorno del escritorio, barra de menu, barra superior y contenedor \t  \t\t  \n        React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"checkbox\",\n          id: \"navigationTrigger\",\n          className: \"navigationTrigger\",\n          checked: this.state.checkMenu,\n          onChange: this.changeNavigationTrigger.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          id: \"labelnavigationTrigger\",\n          htmlFor: \"navigationTrigger\",\n          onClick: this.handleButtonMenu.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, React.createElement(MaterialIcon, {\n          size: 24,\n          icon: \"menu\",\n          invert: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          id: \"pestanas\",\n          className: \"menuNavegacion\",\n          style: {\n            backgroundColor: configJson.fondoMenu\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"LogoCabecera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }), React.createElement(OptionMenu, {\n          funcionClick: this.actualizarContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          id: \"ContenedorDerechoEscritorio\",\n          className: \"ContenedorDerechoEscritorio\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"cabeceraEscritorio\",\n          className: \"cabeceraEscritorio\",\n          style: {\n            backgroundColor: configJson.fondoCabecera\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, React.createElement(NameUser, {\n          className: \"ContentUser\",\n          history: this.props.history,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          id: \"contenidopestanas\",\n          className: \"contenidoEscritorio\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(Container, {\n          componente: this.state.componente,\n          funcionClick: this.actualizarContainer,\n          parametro: this.state.parametro,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }))), React.createElement(Modal //la ventana del loading\n        , {\n          isOpen: this.state.showLoading,\n          contentLabel: \"Minimal Modal Example\",\n          style: stylesLoading,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: loadingImg,\n          alt: \"Loading\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        })))\n      );\n    }\n  }]);\n\n  return Desktop;\n}(Component);\n\nexport default Desktop;","map":{"version":3,"sources":["D:\\PROYECTOS\\recicla\\src\\components\\desktop\\Desktop.js"],"names":["React","Component","Redirect","NameUser","OptionMenu","MaterialIcon","Modal","configJson","globalState","checkSession","cargarFilas","validaEmpresa","loadingImg","Container","alertify","stylesLoading","content","top","left","width","height","right","bottom","marginRight","padding","transform","Desktop","props","state","loading","redirect","componente","parametro","checkMenu","showLoading","usuario","empresa","location","undefined","then","res","response","data","session","msg","alert","detail","response1","error","setState","dispatch","type","params","catch","err","console","actualizarContainer","bind","subscribe","getState","menuNavegacion","unsubscribe1","modalLoading2","val","param","e","opcionCheck","changeNavigationTrigger","handleButtonMenu","backgroundColor","fondoMenu","fondoCabecera","history"],"mappings":";;;;;;;;AAAA;;;;;;;AAQA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,YAAR,EAAqBC,WAArB,EAAiCC,aAAjC,QAAqD,uBAArD;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,wBAAP;AACA,OAAO,oBAAP;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAG;AACRC,IAAAA,GAAG,EAAW,KADN;AAERC,IAAAA,IAAI,EAAU,KAFN;AAGRC,IAAAA,KAAK,EAAS,OAHN;AAIRC,IAAAA,MAAM,EAAQ,OAJN;AAKRC,IAAAA,KAAK,EAAS,MALN;AAMRC,IAAAA,MAAM,EAAQ,MANN;AAORC,IAAAA,WAAW,EAAG,MAPN;AAQRC,IAAAA,OAAO,EAAO,KARN;AASRC,IAAAA,SAAS,EAAK;AATN;AADU,CAAtB;;IAeMC,O;;;;;AACL,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAAC;AACd,iFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACZC,MAAAA,OAAO,EAAE,IADG;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGXC,MAAAA,UAAU,EAAE,aAHD;AAIXC,MAAAA,SAAS,EAAG,EAJD;AAKRC,MAAAA,SAAS,EAAG,KALJ;AAMRC,MAAAA,WAAW,EAAG;AANN,KAAb;AASC,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,OAAO,GAAG,EAAd;;AACA,QAAG,MAAKT,KAAL,CAAWU,QAAX,CAAoBT,KAApB,KAA8BU,SAAjC,EAA2C;AACvCH,MAAAA,OAAO,GAAG,MAAKR,KAAL,CAAWU,QAAX,CAAoBT,KAApB,CAA0BO,OAApC;AACAC,MAAAA,OAAO,GAAG,MAAKT,KAAL,CAAWU,QAAX,CAAoBT,KAApB,CAA0BQ,OAApC;AACH;;AAED3B,IAAAA,YAAY,GACX8B,IADD,CACM,UAAAC,GAAG,EAAI;AACT,UAAIC,QAAQ,GAAGD,GAAG,CAACE,IAAnB;;AACA,UAAID,QAAQ,CAACE,OAAT,KAAqB,MAAzB,EAAiC;AAC7BjC,QAAAA,WAAW,CAAC,OAAD,EAASyB,OAAT,EAAiB,CAAjB,EAAmB,CAAnB,CAAX,CAAiCI,IAAjC,CAAsC,UAAAC,GAAG,EAAI;AACzC,cAAIC,QAAQ,GAAGD,GAAG,CAACE,IAAnB;;AACA,cAAID,QAAQ,CAACG,GAAT,KAAiB,OAArB,EAA8B;AAC1B9B,YAAAA,QAAQ,CAAC+B,KAAT,CAAe,QAAf,EAAyB,8EAA4EJ,QAAQ,CAACK,MAA9G;AACH,WAFD,MAEO;AACHnC,YAAAA,aAAa,CAACyB,OAAD,CAAb,CACCG,IADD,CACM,UAAAC,GAAG,EAAI;AACT,kBAAIO,SAAS,GAAGP,GAAG,CAACE,IAApB;;AACA,kBAAGK,SAAS,CAACH,GAAV,KAAkB,UAArB,EAAgC;AAAC;AAC7B9B,gBAAAA,QAAQ,CAACkC,KAAT,CAAe,uBAAf,EAD4B,CAE5B;AACH,eAHD,MAIK,IAAGD,SAAS,CAACH,GAAV,KAAkB,OAArB,EAA6B;AAAC;AAC/B9B,gBAAAA,QAAQ,CAAC+B,KAAT,CAAe,QAAf,EAAyB,8EAA4EJ,QAAQ,CAACK,MAA9G,EAD8B,CAE9B;AACH,eAHI,MAID;AACA;AACA,sBAAKG,QAAL,CAAc;AAAEpB,kBAAAA,OAAO,EAAE;AAAX,iBAAd,EAAiC,YAAI;AACjCrB,kBAAAA,WAAW,CAAC0C,QAAZ,CAAqB;AACjBC,oBAAAA,IAAI,EAAK,UADQ;AAEjBC,oBAAAA,MAAM,EAAGX;AAFQ,mBAArB;AAIAjC,kBAAAA,WAAW,CAAC0C,QAAZ,CAAqB;AACjBC,oBAAAA,IAAI,EAAK,aADQ;AAEjBC,oBAAAA,MAAM,EAAGL;AAFQ,mBAArB;AAIH,iBATD;AAUH;AACJ,aAxBD,EAyBCM,KAzBD,CAyBQ,UAAAC,GAAG,EAAI;AACXxC,cAAAA,QAAQ,CAAC+B,KAAT,CAAe,QAAf,EAAyB,wDAAsDS,GAA/E;AACH,aA3BD;AA4BH;AACJ,SAlCD,EAmCCD,KAnCD,CAmCQ,UAAAC,GAAG,EAAI;AACXxC,UAAAA,QAAQ,CAAC+B,KAAT,CAAe,QAAf,EAAyB,wDAAsDS,GAA/E;AACH,SArCD;AAsCH,OAvCD,MAuCO;AACH,cAAKL,QAAL,CAAc;AAAEpB,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAd;AACH;AACJ,KA7CD,EA8CCuB,KA9CD,CA8CO,UAAAC,GAAG,EAAI;AACVC,MAAAA,OAAO,CAACP,KAAR,CAAcM,GAAd;;AACA,YAAKL,QAAL,CAAc;AAAEpB,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAAd;AACH,KAjDD;AAmDD,UAAK0B,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBC,IAAzB,uDAA3B;AAECjD,IAAAA,WAAW,CAACkD,SAAZ,CAAuB,YAAI;AACvB,UAAGlD,WAAW,CAACmD,QAAZ,GAAuBR,IAAvB,KAA8B,gBAAjC,EAAkD;AAC9C,cAAKF,QAAL,CAAc;AAAChB,UAAAA,SAAS,EAAIzB,WAAW,CAACmD,QAAZ,GAAuBC;AAArC,SAAd;AACH;AACJ,KAJD;AAxEY;AA6ElB;;;;wCAEmB;AAAA;;AAAC;AACd;AACA,WAAKC,YAAL,GAAoBrD,WAAW,CAACkD,SAAZ,CAAuB,YAAI;AAC3C,YAAGlD,WAAW,CAACmD,QAAZ,GAAuBR,IAAvB,KAA8B,eAAjC,EAAiD;AAC7C,UAAA,MAAI,CAACF,QAAL,CAAc;AAACf,YAAAA,WAAW,EAAI1B,WAAW,CAACmD,QAAZ,GAAuBG;AAAvC,WAAd;AACH;AACJ,OAJmB,CAApB;AAKH;;;2CACqB;AAClB,WAAKD,YAAL;AACH;;;wCAEmBE,G,EAAIC,K,EAAM;AAAC;AAC9B,WAAKf,QAAL,CAAc;AAAElB,QAAAA,UAAU,EAAEgC;AAAd,OAAd;AACA,WAAKd,QAAL,CAAc;AAAEjB,QAAAA,SAAS,EAAGgC;AAAd,OAAd;AACA;;;qCAEgBC,C,EAAE;AAAC;AAChB,UAAIC,WAAW,GAAG,IAAlB;;AACA,UAAG,KAAKtC,KAAL,CAAWK,SAAX,KAAyB,IAA5B,EAAiC;AAC7BiC,QAAAA,WAAW,GAAG,KAAd;AACH;;AACD1D,MAAAA,WAAW,CAAC0C,QAAZ,CAAqB;AACDC,QAAAA,IAAI,EAAK,gBADR;AAEDC,QAAAA,MAAM,EAAGc;AAFR,OAArB;AAIH;;;4CAEuBD,C,EAAE,CACtB;AACH;;;6BAEO;AAAA,wBACsB,KAAKrC,KAD3B;AAAA,UACAC,OADA,eACAA,OADA;AAAA,UACSC,QADT,eACSA,QADT;;AAER,UAAID,OAAJ,EAAa;AACR,eAAO,IAAP;AACD;;AACD,UAAIC,QAAJ,EAAc;AAAC;AACVe,QAAAA,KAAK,CAAC,qDAAD,CAAL;AACH,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACF,aAAQ;AACP;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACS;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,EAAE,EAAC,mBAA1B;AAA8C,UAAA,SAAS,EAAC,mBAAxD;AAA4E,UAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWK,SAAhG;AAA2G,UAAA,QAAQ,EAAE,KAAKkC,uBAAL,CAA6BV,IAA7B,CAAkC,IAAlC,CAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADT,EAES;AAAO,UAAA,EAAE,EAAC,wBAAV;AAAmC,UAAA,OAAO,EAAC,mBAA3C;AAA+D,UAAA,OAAO,EAAE,KAAKW,gBAAL,CAAsBX,IAAtB,CAA2B,IAA3B,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAE,EAApB;AAAwB,UAAA,IAAI,EAAC,MAA7B;AAAoC,UAAA,MAAM,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAFT,EAKO;AAAK,UAAA,EAAE,EAAC,UAAR;AAAmB,UAAA,SAAS,EAAC,gBAA7B;AAA8C,UAAA,KAAK,EAAE;AAACY,YAAAA,eAAe,EAAC9D,UAAU,CAAC+D;AAA5B,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH,EAIG,oBAAC,UAAD;AAAY,UAAA,YAAY,EAAI,KAAKd,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJH,CALP,EAWS;AAAK,UAAA,EAAE,EAAC,6BAAR;AAAsC,UAAA,SAAS,EAAC,6BAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,EAAE,EAAC,oBAAR;AAA6B,UAAA,SAAS,EAAC,oBAAvC;AAA4D,UAAA,KAAK,EAAE;AAACa,YAAAA,eAAe,EAAC9D,UAAU,CAACgE;AAA5B,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,oBAAC,QAAD;AAAU,UAAA,SAAS,EAAC,aAApB;AAAkC,UAAA,OAAO,EAAE,KAAK5C,KAAL,CAAW6C,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH,CADF,EAIC;AAAK,UAAA,EAAE,EAAC,mBAAR;AAA4B,UAAA,SAAS,EAAC,qBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,oBAAC,SAAD;AAAW,UAAA,UAAU,EAAE,KAAK5C,KAAL,CAAWG,UAAlC;AAA8C,UAAA,YAAY,EAAI,KAAKyB,mBAAnE;AAAwF,UAAA,SAAS,EAAE,KAAK5B,KAAL,CAAWI,SAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH,CAJD,CAXT,EAmBS,oBAAC,KAAD,CAAO;AAAP;AACG,UAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWM,WADtB;AAEG,UAAA,YAAY,EAAC,uBAFhB;AAGG,UAAA,KAAK,EAAEnB,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKI;AAAK,UAAA,GAAG,EAAEH,UAAV;AAAuB,UAAA,GAAG,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ,CAnBT;AADD;AA6BF;;;;EAtJkBX,S;;AAyJtB,eAAeyB,OAAf","sourcesContent":["/**\r\n* CLASS Desktop\r\n*\r\n* Contiene el escritorio de la aplicacion\r\n*\r\n* @author Hector Morales <warrior1987@gmail.com>\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport NameUser from './NameUser';\r\nimport OptionMenu from './OptionMenu';\r\nimport MaterialIcon from 'material-icons-react';\r\nimport Modal from 'react-modal';\r\nimport configJson from '../configuration/configuration.json';\r\nimport globalState from '../configuration/GlobalState';\r\nimport {checkSession,cargarFilas,validaEmpresa} from '../api_calls/ApiCalls';\r\nimport loadingImg from '../../images/loading.gif?v1.0';\r\nimport Container from './Container';\r\nimport alertify from 'alertifyjs';\r\nimport '../../css/alertify.css';\r\nimport './desktop.css?v1.5'; \r\n\r\nconst stylesLoading = {\r\n  content : {\r\n    top         : '50%',\r\n    left        : '50%',\r\n    width       : '202px',\r\n    height      : '202px',\r\n    right       : 'auto',\r\n    bottom      : 'auto',\r\n    marginRight : '-50%',\r\n    padding     : '0px',\r\n    transform   : 'translate(-50%, -50%)',    \r\n  }\r\n};\r\n\r\n\r\nclass Desktop extends Component {\r\n\tconstructor(props) {//al cargarse trae los datos del usuario \t\t\r\n      \tsuper(props);          \r\n\r\n      \tthis.state = { \r\n      \t\tloading: true,\r\n          \tredirect: false,\t \t\t                \r\n      \t \tcomponente: \"WelcomePage\",\r\n      \t \tparametro : \"\",\r\n            checkMenu : false,\r\n            showLoading : false \r\n\t    }; \r\n\r\n        var usuario = '';\r\n        var empresa = '';\r\n        if(this.props.location.state !== undefined){\r\n            usuario = this.props.location.state.usuario; \r\n            empresa = this.props.location.state.empresa;\r\n        }        \r\n          \r\n        checkSession()\r\n        .then(res => {\r\n            var response = res.data; \r\n            if (response.session === \"true\") {\r\n                cargarFilas('users',usuario,1,0).then(res => {\r\n                    var response = res.data; \r\n                    if (response.msg === \"error\") {\r\n                        alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: '+response.detail);\r\n                    } else {  \r\n                        validaEmpresa(empresa)        \r\n                        .then(res => {\r\n                            var response1 = res.data;                       \r\n                            if(response1.msg === 'notExist'){//aqui no me dejara continuar si la empresa noe xiste\r\n                                alertify.error('La empresa no existe!'); \r\n                                //this.inputEmpresa.current.focus();\r\n                            }\r\n                            else if(response1.msg === 'error'){//aqui no me dejara continuar si hay un error\r\n                                alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: '+response.detail);\r\n                                //this.inputEmpresa.current.focus();\r\n                            }\r\n                            else{\r\n                                //this.setState({id_empresa: response[0].id}); //CARGAR EL ID EMPRESA  \r\n                                this.setState({ loading: false },()=>{\r\n                                    globalState.dispatch({\r\n                                        type   : \"userData\",\r\n                                        params : response\r\n                                    });\r\n                                    globalState.dispatch({\r\n                                        type   : \"companyData\",\r\n                                        params : response1\r\n                                    });   \r\n                                });            \r\n                            }          \r\n                        }) \r\n                        .catch( err => {            \r\n                            alertify.alert('Error!', 'No se ha logrado la conexion con el servidor!<br />'+err);                            \r\n                        });                                 \r\n                    }\r\n                })\r\n                .catch( err => {            \r\n                    alertify.alert('Error!', 'No se ha logrado la conexion con el servidor!<br />'+err);\r\n                });                 \r\n            } else {\r\n                this.setState({ loading: false, redirect: true });\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            this.setState({ loading: false, redirect: true });\r\n        });         \r\n\r\n\t      this.actualizarContainer = this.actualizarContainer.bind(this);\t\r\n\r\n        globalState.subscribe( ()=>{ \r\n            if(globalState.getState().type===\"menuNavegacion\"){                             \r\n                this.setState({checkMenu  : globalState.getState().menuNavegacion});                               \r\n            }\r\n        });\r\n\t} \r\n    \r\n\tcomponentDidMount() {//cada que se monte el escritorio debe alistar la ventana del loading      \r\n        //... \r\n        this.unsubscribe1 = globalState.subscribe( ()=>{ \r\n            if(globalState.getState().type===\"modalLoading2\"){ \r\n                this.setState({showLoading  : globalState.getState().modalLoading2});                                           \r\n            }\r\n        });          \r\n    } \r\n    componentWillUnmount(){         \r\n        this.unsubscribe1();\r\n    }\t\r\n\r\n    actualizarContainer(val,param){//carga dinamica del lado derecho\t\r\n    \tthis.setState({ componente: val });\r\n    \tthis.setState({ parametro : param });\t\t\r\n    }\t\r\n\r\n    handleButtonMenu(e){//el boton que muestra esconde la barra de navegacion   \r\n        var opcionCheck = true;\r\n        if(this.state.checkMenu === true){\r\n            opcionCheck = false;\r\n        } \r\n        globalState.dispatch({\r\n                            type   : \"menuNavegacion\",\r\n                            params : opcionCheck\r\n                        });\r\n    }\r\n\r\n    changeNavigationTrigger(e){\r\n        //........\r\n    }\r\n\r\n  \trender() {\r\n  \t\tconst { loading, redirect } = this.state;        \r\n  \t\tif (loading) {\r\n        \treturn null;\r\n      \t}\r\n      \tif (redirect) {//sesion inexistente, cargar login\r\n            alert('Su sesion ha finalizado, debe registrarse de nuevo!');\r\n        \treturn <Redirect to=\"/recicla/\" />;\r\n      \t}  \t\t\t \t\t\r\n  \t  \treturn (//carga el entorno del escritorio, barra de menu, barra superior y contenedor \t  \t\t  \r\n  \t  \t\t<div className=\"App\">\r\n                <input type=\"checkbox\" id=\"navigationTrigger\" className=\"navigationTrigger\" checked={this.state.checkMenu} onChange={this.changeNavigationTrigger.bind(this)} />     \r\n                <label id=\"labelnavigationTrigger\" htmlFor=\"navigationTrigger\" onClick={this.handleButtonMenu.bind(this)}>\r\n                    <MaterialIcon size={24} icon=\"menu\" invert/>                    \r\n                </label>            \r\n\t \t\t          <div id=\"pestanas\" className=\"menuNavegacion\" style={{backgroundColor:configJson.fondoMenu}}>\r\n\t \t\t          \t  <div className=\"LogoCabecera\">\r\n\t \t\t          \t  \t  \r\n\t \t\t          \t  </div>\r\n\t \t\t          \t  <OptionMenu funcionClick = {this.actualizarContainer}/>\r\n\t \t\t          </div>\r\n                <div id=\"ContenedorDerechoEscritorio\" className=\"ContenedorDerechoEscritorio\">\r\n\t \t\t              <div id=\"cabeceraEscritorio\" className=\"cabeceraEscritorio\" style={{backgroundColor:configJson.fondoCabecera}}>\r\n\t \t\t              \t  <NameUser className=\"ContentUser\" history={this.props.history}/>  \t    \t\t\r\n\t \t\t              </div>\r\n\t    \t\t          <div id=\"contenidopestanas\" className=\"contenidoEscritorio\">\r\n\t    \t\t \t           <Container componente={this.state.componente} funcionClick = {this.actualizarContainer} parametro={this.state.parametro}/>\r\n\t    \t\t          </div>\t\r\n                </div>\r\n                <Modal //la ventana del loading\r\n                   isOpen={this.state.showLoading}\r\n                   contentLabel=\"Minimal Modal Example\"\r\n                   style={stylesLoading}\r\n                > \r\n                    <img src={loadingImg}  alt=\"Loading\"/>\r\n                </Modal>\t\t     \r\n\t       </div>   \t\r\n\t\t);\r\n  \t}\r\n}\r\n\r\nexport default Desktop"]},"metadata":{},"sourceType":"module"}