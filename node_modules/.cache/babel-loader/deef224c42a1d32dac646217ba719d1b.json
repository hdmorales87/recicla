{"ast":null,"code":"import _classCallCheck from \"F:\\\\PROYECTOS\\\\chatarreria-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\PROYECTOS\\\\chatarreria-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\PROYECTOS\\\\chatarreria-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\PROYECTOS\\\\chatarreria-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\PROYECTOS\\\\chatarreria-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\PROYECTOS\\\\chatarreria-front\\\\src\\\\components\\\\data_grid\\\\DataGridContainer.js\";\n\n/**\r\n* CLASS DataGridContainer\r\n*\r\n* Contiene el contenedor de la tabla de datos\r\n*\r\n* @author Hector Morales <warrior1987@gmail.com>\r\n*/\nimport React, { Component } from 'react';\nimport DataGridList from './DataGridList';\nimport Table from 'react-bootstrap/Table';\nimport axios from 'axios';\nimport alertify from 'alertifyjs';\nimport '../../css/alertify.css';\n\nvar DataGridContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataGridContainer, _Component);\n\n  function DataGridContainer(props) {\n    var _this;\n\n    _classCallCheck(this, DataGridContainer);\n\n    var arrayContent = [];\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataGridContainer).call(this, props));\n    _this.state = {\n      content: arrayContent\n    };\n    return _this;\n  }\n\n  _createClass(DataGridContainer, [{\n    key: \"handleClick\",\n    value: function handleClick(val) {\n      this.setState({\n        justClicked: val\n      });\n    }\n  }, {\n    key: \"cargaFilas\",\n    value: function cargaFilas() {\n      var _this2 = this;\n\n      var searchWord = '';\n      var showRecords = 5;\n      var offsetRecord = 0;\n\n      if (this.props.parametro !== undefined) {\n        if (this.props.parametro.hasOwnProperty('searchWord')) {\n          searchWord = this.props.parametro.searchWord;\n          showRecords = this.props.parametro.showRecords;\n          offsetRecord = this.props.parametro.offsetRecord;\n        }\n      } //Ajax a la API que trae los registros\n\n\n      axios.get(this.props.apiUrl, {\n        withCredentials: true,\n        params: {\n          searchWord: searchWord,\n          showRecords: showRecords,\n          offsetRecord: offsetRecord\n        }\n      }).then(function (res) {\n        var response = res.data;\n\n        if (response.msg === \"error\") {\n          alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: ' + response.detail);\n        } else {\n          _this2.setState({\n            content: response\n          });\n        }\n      }).catch(function (err) {\n        alertify.alert('Error!', 'No se ha logrado la conexion con el servidor!<br />' + err);\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.cargaFilas();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.parametro !== prevProps.parametro) {\n        this.cargaFilas();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.content.length > 0) {\n        return (//carga dinamica de la cabecera y del listado\n          React.createElement(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, React.createElement(\"thead\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, React.createElement(\"tr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, React.createElement(\"th\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, \"No\"), this.props.colsHeaders.map(function (colsHeaders, i) {\n            return React.createElement(\"th\", {\n              key: i,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }, colsHeaders);\n          }), React.createElement(\"th\", {\n            style: {\n              width: '180px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, \"Acciones\"))), React.createElement(DataGridList, {\n            listado: this.state.content,\n            titulo: this.props.titulo,\n            funcionClick: this.props.funcionClick,\n            colsData: this.props.colsData,\n            apiUrl: this.props.apiUrl,\n            formFields: this.props.formFields,\n            mainContainer: this.props.mainContainer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }))\n        );\n      } else {\n        return React.createElement(\"div\", {\n          className: \"titulo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"No hay registros...\");\n      }\n    }\n  }]);\n\n  return DataGridContainer;\n}(Component);\n\nexport default DataGridContainer;","map":{"version":3,"sources":["F:\\PROYECTOS\\chatarreria-front\\src\\components\\data_grid\\DataGridContainer.js"],"names":["React","Component","DataGridList","Table","axios","alertify","DataGridContainer","props","arrayContent","state","content","val","setState","justClicked","searchWord","showRecords","offsetRecord","parametro","undefined","hasOwnProperty","get","apiUrl","withCredentials","params","then","res","response","data","msg","alert","detail","catch","err","cargaFilas","prevProps","length","colsHeaders","map","i","width","titulo","funcionClick","colsData","formFields","mainContainer"],"mappings":"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","sourcesContent":["/**\r\n* CLASS DataGridContainer\r\n*\r\n* Contiene el contenedor de la tabla de datos\r\n*\r\n* @author Hector Morales <warrior1987@gmail.com>\r\n*/\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport DataGridList from './DataGridList';\r\nimport Table from 'react-bootstrap/Table';\r\nimport axios from 'axios';\r\nimport alertify from 'alertifyjs';\r\nimport '../../css/alertify.css';\r\n\r\nclass DataGridContainer extends Component {\r\n    constructor(props) {\r\n        let  arrayContent = [];\r\n        super(props);\r\n        this.state = {  \r\n                        content :  arrayContent\r\n                     }\r\n    }\r\n  \thandleClick(val) {\r\n  \t  \tthis.setState({ justClicked: val });\r\n  \t}\r\n    \r\n    cargaFilas(){\r\n        let searchWord   = '';\r\n        let showRecords  = 5;\r\n        let offsetRecord = 0;        \r\n        if(this.props.parametro !== undefined){\r\n            if(this.props.parametro.hasOwnProperty('searchWord')){\r\n                searchWord = this.props.parametro.searchWord; \r\n                showRecords = this.props.parametro.showRecords;  \r\n                offsetRecord = this.props.parametro.offsetRecord; \r\n            }        \r\n        }        \r\n        //Ajax a la API que trae los registros\r\n        axios.get(this.props.apiUrl, {withCredentials: true, params: { searchWord : searchWord,showRecords : showRecords,offsetRecord : offsetRecord } })\r\n        .then(res => {\r\n            var response = res.data; \r\n            if (response.msg === \"error\") {\r\n                alertify.alert('Error!', 'Ha ocurrido un error accesando a la base de datos!<br />Codigo de Error: '+response.detail);\r\n            } else {\r\n                this.setState({ content: response })\r\n            }\r\n        })\r\n        .catch( err => {            \r\n            alertify.alert('Error!', 'No se ha logrado la conexion con el servidor!<br />'+err);\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.cargaFilas();        \r\n    }\r\n\r\n    componentDidUpdate(prevProps){        \r\n        if (this.props.parametro !== prevProps.parametro) {           \r\n           this.cargaFilas(); \r\n        }       \r\n    }    \r\n\r\n  \trender() {  \r\n        if (this.state.content.length > 0) {\r\n            return (//carga dinamica de la cabecera y del listado\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>No</th>\r\n                            {\r\n                                this.props.colsHeaders.map((colsHeaders,i) => {\r\n                                    return <th key={ i }>{colsHeaders}</th>\r\n                                })\r\n                            }                          \r\n                            <th style= {{width: '180px'}}>Acciones</th>\r\n                        </tr>\r\n                    </thead>      \r\n                    <DataGridList listado={this.state.content} \r\n                                  titulo={this.props.titulo}\r\n                                  funcionClick={this.props.funcionClick} \r\n                                  colsData={this.props.colsData} \r\n                                  apiUrl={this.props.apiUrl}\r\n                                  formFields={this.props.formFields}\r\n                                  mainContainer={this.props.mainContainer}/>                                       \r\n                </Table>\r\n            )\r\n        } else {\r\n            return <div className=\"titulo\">No hay registros...</div>\r\n        }\r\n    } \r\n}\r\n\r\nexport default DataGridContainer\r\n"]},"metadata":{},"sourceType":"module"}