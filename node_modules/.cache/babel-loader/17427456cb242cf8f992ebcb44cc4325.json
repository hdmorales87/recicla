{"ast":null,"code":"import _classCallCheck from \"D:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\PROYECTOS\\\\recicla\\\\src\\\\components\\\\window\\\\Window.js\";\n\n/**\r\n* CLASS Window\r\n*\r\n* Contiene el componente principal de la ventana\r\n*\r\n* @author Hector Morales <warrior1987@gmail.com>\r\n*/\nimport React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport globalState from '../configuration/GlobalState';\nimport configJson from '../configuration/configuration.json';\nimport { divMouseOver, divMouseOut } from '../configuration/GlobalFunctions';\nimport WindowContainer from './WindowContainer';\nimport MaterialIcon from 'material-icons-react';\nimport './window.css';\nModal.setAppElement('#root');\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    padding: '0px',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nvar Window =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Window, _Component);\n\n  function Window(props) {\n    var _this;\n\n    _classCallCheck(this, Window);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Window).call(this, props));\n    _this.state = {\n      componente: _this.props.componente,\n      showModal: false,\n      parametro: \"\",\n      modalParams: ''\n    };\n    _this.handleCloseModal = _this.handleCloseModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.actualizarContainer = _this.actualizarContainer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    var w = window.innerWidth;\n\n    if (w <= 1024) {\n      customStyles.content.width = '100%';\n      customStyles.content.height = '100%';\n    } else {\n      customStyles.content.width = _this.props.width;\n      customStyles.content.height = _this.props.height;\n    }\n\n    return _this;\n  }\n\n  _createClass(Window, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.unsubscribe1 = globalState.subscribe(function () {\n        if (globalState.getState().type === _this2.props.id) {\n          _this2.setState({\n            showModal: globalState.getState()[_this2.props.id].visible\n          });\n\n          if (globalState.getState()[_this2.props.id].params !== undefined) {\n            //si existen le cargamos los parametros\n            _this2.setState({\n              modalParams: globalState.getState()[_this2.props.id].params\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe1();\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      //actualiza las propiedades segun la ventana que se despliegue\n      var w = window.innerWidth;\n\n      if (w <= 1024) {\n        customStyles.content.width = '100%';\n        customStyles.content.height = '100%';\n      } else {\n        customStyles.content.width = this.props.width;\n        customStyles.content.height = this.props.height;\n      }\n    }\n  }, {\n    key: \"handleCloseModal\",\n    value: function handleCloseModal() {\n      globalState.dispatch({\n        type: this.props.id,\n        params: {\n          visible: false\n        }\n      });\n    }\n  }, {\n    key: \"actualizarContainer\",\n    value: function actualizarContainer(val, param) {\n      //carga dinamica del lado derecho    \n      this.setState({\n        componente: val\n      });\n      this.setState({\n        parametro: param\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var lengthTbar = this.props.tbar.length;\n      var display = \"table-cell\";\n\n      if (lengthTbar === 1) {\n        display = \"block\";\n      }\n\n      return React.createElement(Modal, {\n        isOpen: this.state.showModal,\n        contentLabel: \"Minimal Modal Example\",\n        style: customStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          backgroundColor: configJson.windowColor\n        },\n        className: \"windowTitle\",\n        os: \"windows\",\n        id: \"windowTitleFrame\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"windowTitleTextFrame\",\n        className: \"windowTitleText\",\n        os: \"windows\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"div\", {\n        className: \"windowTitleBoton\",\n        style: {\n          top: '-4px',\n          left: '-2px'\n        },\n        os: \"windows\",\n        id: \"btnCloseVentanaFrame\",\n        onClick: this.handleCloseModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(MaterialIcon, {\n        size: 24,\n        icon: \"close\",\n        invert: true,\n        id: \"iconClose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        style: {\n          backgroundColor: configJson.windowColor\n        },\n        className: \"windowTbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.props.tbar !== 'false' ? this.props.tbar.map(function (tbar, i) {\n        //cargar la tbar\n        return React.createElement(\"div\", {\n          id: \"windowButton\" + i,\n          className: \"windowButton\",\n          key: i,\n          style: {\n            width: tbar.width,\n            height: tbar.height,\n            display: display\n          },\n          onMouseOut: divMouseOut.bind(_this3, \"windowButton\" + i, configJson.windowColor),\n          onMouseOver: divMouseOver.bind(_this3, \"windowButton\" + i, configJson.windowColor),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          style: {\n            width: 'calc(100% - 5px)',\n            float: 'left'\n          },\n          onClick: tbar.function,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(MaterialIcon, {\n          size: 24,\n          icon: tbar.icon,\n          invert: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"save\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, tbar.title)), //la barra separadora\n        i < _this3.props.tbar.length - 1 ? React.createElement(\"div\", {\n          className: \"windowSeparator\",\n          style: {\n            height: tbar.height\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }) : '');\n      }) : ''), React.createElement(WindowContainer, {\n        componente: this.state.componente,\n        params: this.state.modalParams,\n        funcionClick: this.actualizarContainer,\n        parametro: this.state.parametro,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Window;\n}(Component);\n\nexport default Window;","map":{"version":3,"sources":["D:\\PROYECTOS\\recicla\\src\\components\\window\\Window.js"],"names":["React","Component","Modal","globalState","configJson","divMouseOver","divMouseOut","WindowContainer","MaterialIcon","setAppElement","customStyles","content","top","left","right","bottom","marginRight","padding","transform","Window","props","state","componente","showModal","parametro","modalParams","handleCloseModal","bind","actualizarContainer","w","window","innerWidth","width","height","unsubscribe1","subscribe","getState","type","id","setState","visible","params","undefined","dispatch","val","param","lengthTbar","tbar","length","display","backgroundColor","windowColor","title","map","i","float","function","icon"],"mappings":"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","sourcesContent":["/**\r\n* CLASS Window\r\n*\r\n* Contiene el componente principal de la ventana\r\n*\r\n* @author Hector Morales <warrior1987@gmail.com>\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport Modal from 'react-modal';\r\nimport globalState from '../configuration/GlobalState';\r\nimport configJson from '../configuration/configuration.json';\r\nimport {divMouseOver,divMouseOut} from '../configuration/GlobalFunctions';\r\nimport WindowContainer from './WindowContainer';\r\nimport MaterialIcon from 'material-icons-react'; \r\nimport './window.css';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top         : '50%',\r\n    left        : '50%',\r\n    right       : 'auto',\r\n    bottom      : 'auto',\r\n    marginRight : '-50%',\r\n    padding     : '0px',\r\n    transform   : 'translate(-50%, -50%)',\r\n  }\r\n};\r\n\r\nclass Window extends Component {\r\n\r\n    constructor(props) {        \r\n        super(props); \r\n        this.state = {\r\n            componente : this.props.componente,\r\n            showModal: false,\r\n            parametro: \"\",\r\n            modalParams : ''\r\n        };               \r\n        this.handleCloseModal = this.handleCloseModal.bind(this); \r\n        this.actualizarContainer = this.actualizarContainer.bind(this);\r\n        let w = window.innerWidth;\r\n        if(w <= 1024){\r\n            customStyles.content.width  = '100%';   \r\n            customStyles.content.height = '100%'; \r\n        }\r\n        else{\r\n            customStyles.content.width  = this.props.width;   \r\n            customStyles.content.height = this.props.height;\r\n        }\r\n    } \r\n    componentDidMount(){        \r\n        this.unsubscribe1 = globalState.subscribe( ()=>{           \r\n            if(globalState.getState().type===this.props.id){ \r\n                this.setState({ showModal: globalState.getState()[this.props.id].visible });\r\n                if(globalState.getState()[this.props.id].params !== undefined) {//si existen le cargamos los parametros\r\n                    this.setState({ modalParams: globalState.getState()[this.props.id].params }); \r\n                }              \r\n            }\r\n        });\r\n    }\r\n    componentWillUnmount(){\r\n        this.unsubscribe1();\r\n    }\r\n    componentWillUpdate(){\r\n        //actualiza las propiedades segun la ventana que se despliegue\r\n        let w = window.innerWidth;\r\n        if(w <= 1024){\r\n            customStyles.content.width  = '100%';   \r\n            customStyles.content.height = '100%'; \r\n        }\r\n        else{\r\n            customStyles.content.width  = this.props.width;   \r\n            customStyles.content.height = this.props.height;\r\n        } \r\n    }\r\n     \r\n    handleCloseModal () {\r\n        globalState.dispatch({\r\n                type   : this.props.id,\r\n                params : {\r\n                            visible : false\r\n                         }\r\n            });\r\n    }\r\n    actualizarContainer(val,param){//carga dinamica del lado derecho    \r\n        this.setState({ componente: val });\r\n        this.setState({ parametro : param });       \r\n    }    \r\n  \trender() {\r\n        var lengthTbar = this.props.tbar.length;\r\n        var display = \"table-cell\";      \r\n        if(lengthTbar === 1){\r\n            display = \"block\";  \r\n        } \r\n  \t  \treturn (\r\n  \t\t\t<Modal \r\n               isOpen={this.state.showModal}\r\n               contentLabel=\"Minimal Modal Example\"\r\n               style={customStyles}\r\n            >\r\n                <div style={{backgroundColor : configJson.windowColor }} className=\"windowTitle\" os=\"windows\" id=\"windowTitleFrame\">\r\n                    <div id=\"windowTitleTextFrame\" className=\"windowTitleText\" os=\"windows\">{this.props.title}</div>\r\n                    <div className=\"windowTitleBoton\" style={{ top: '-4px',left:'-2px'}} os=\"windows\" id=\"btnCloseVentanaFrame\" onClick={this.handleCloseModal}>\r\n                        <MaterialIcon size={24} icon=\"close\" invert id=\"iconClose\"/>\r\n                    </div> \r\n                </div> \r\n                <div style={{backgroundColor : configJson.windowColor }} className=\"windowTbar\" >\r\n                {\r\n                    this.props.tbar !== 'false' ?                                             \r\n                        this.props.tbar.map((tbar,i) => {//cargar la tbar\r\n                                    return (   \r\n                                        <div id={\"windowButton\"+i} className=\"windowButton\" key={i} style={{width:tbar.width,height:tbar.height,display:display}}  onMouseOut={divMouseOut.bind(this,\"windowButton\"+i,configJson.windowColor)} onMouseOver={divMouseOver.bind(this,\"windowButton\"+i,configJson.windowColor)}>                                    \r\n                                            <div style={{width:'calc(100% - 5px)',float:'left'}} onClick={tbar.function}> \r\n                                                <MaterialIcon size={24} icon={tbar.icon} invert/>\r\n                                                <button className=\"save\">{tbar.title}</button>                                             \r\n                                            </div>\r\n                                            {//la barra separadora\r\n                                               i < this.props.tbar.length-1 ? \r\n                                                  <div className=\"windowSeparator\" style={{height:tbar.height}}></div>\r\n                                               : ''\r\n                                            }\r\n                                            \r\n                                        </div>\r\n                                    )\r\n                        })                       \r\n                    : ''\r\n                }\r\n                </div>                     \r\n                <WindowContainer componente={this.state.componente} params={this.state.modalParams} funcionClick = {this.actualizarContainer} parametro={this.state.parametro}/>\r\n            </Modal>  \t\t\t\t\r\n\t\t\t  );\r\n  \t}    \r\n}\r\n\r\nexport default Window"]},"metadata":{},"sourceType":"module"}