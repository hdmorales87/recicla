{"ast":null,"code":"import _classCallCheck from \"F:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\PROYECTOS\\\\recicla\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\PROYECTOS\\\\recicla\\\\src\\\\components\\\\control_panel\\\\Users.js\";\n\n/**\r\n* CLASS Users\r\n*\r\n* Contiene el contenedor principal de los usuarios\r\n*\r\n* @author Hector Morales <warrior1987@gmail.com>\r\n*/\nimport React, { Component } from 'react';\nimport DataGrid from '../data_grid/DataGrid';\nimport globalState from '../configuration/GlobalState';\nimport { guardaAccesoEmpresas } from '../api_calls/ApiCalls';\nimport Window from '../window/Window';\nimport { modalLoading } from '../configuration/GlobalFunctions';\nimport TBar from '../tbar/TBar';\nimport alertify from 'alertifyjs';\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users() {\n    _classCallCheck(this, Users);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Users).apply(this, arguments));\n  }\n\n  _createClass(Users, [{\n    key: \"retrocederPanel\",\n    value: function retrocederPanel() {\n      this.props.funcionClick('ControlPanel');\n    }\n  }, {\n    key: \"colFuncion\",\n    value: function colFuncion(idUser) {\n      globalState.dispatch({\n        type: \"windowAccesoEmpresas\",\n        params: {\n          visible: true,\n          params: {\n            idUser: idUser,\n            idWin: \"windowAccesoEmpresas\" //identificador de la ventana\n\n          }\n        }\n      });\n    }\n  }, {\n    key: \"guardaAccesosEmpresas\",\n    value: function guardaAccesosEmpresas() {\n      var objEmpresas = globalState.getState().configEmpresas;\n      var objWindow = globalState.getState().windowAccesoEmpresas;\n      var arrayAccesoEmpresas = [];\n\n      for (var id in objEmpresas) {\n        if (objEmpresas[id] === true) {\n          arrayAccesoEmpresas.push(id);\n        }\n      }\n\n      modalLoading(true);\n      guardaAccesoEmpresas(objWindow.params.idUser, arrayAccesoEmpresas).then(function (response) {\n        modalLoading(false);\n        globalState.dispatch({\n          type: \"windowAccesoEmpresas\",\n          params: {\n            visible: false\n          }\n        });\n      }).catch(function (error) {\n        modalLoading(false);\n        alertify.alert('Error!', 'No se ha logrado la conexion con el servidor!<br />' + error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var idRol = globalState.getState().idRol;\n      var botonAccesos = '';\n\n      if (idRol === 1) {\n        botonAccesos = {\n          type: 'manual',\n          label: '',\n          icon: 'settings',\n          colFuncion: this.colFuncion.bind(this)\n        };\n      }\n\n      var sqlParams = {\n        sqlCols: ['T1.id', 'T1.id_tipo_documento', 'DT.nombre AS tipo_documento', 'T1.documento', 'T1.nombre', 'T1.primer_nombre', 'T1.segundo_nombre', 'T1.primer_apellido', 'T1.segundo_apellido', 'T1.email', 'T1.direccion', 'T1.telefono', 'T1.id_rol', 'RL.nombre AS rol', 'T1.imagen_usuario'],\n        sqlJoin: ['INNER JOIN document_types AS DT ON (DT.id = T1.id_tipo_documento)', 'INNER JOIN roles AS RL ON (RL.id = T1.id_rol)'],\n        sqlWhere: [' AND T1.id_rol > 1 '],\n        fieldSearch: ['T1.nombre', 'T1.documento', 'T1.email', 'T1.direccion', 'T1.telefono'],\n        sqlEmpresa: \"true\"\n      };\n      return (//carga el componente que contiene la grilla de datos         \n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(TBar, {\n          items: [{\n            type: 'boton',\n            icon: 'arrow_back',\n            width: '100px',\n            height: '60px',\n            title: 'Atras',\n            display: true,\n            function: this.retrocederPanel.bind(this)\n          }],\n          length: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          style: {\n            top: \"60px\",\n            position: \"relative\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(DataGrid, {\n          titulo: \"Usuarios\",\n          funcionClick: this.props.funcionClick,\n          parametro: this.props.parametro,\n          colsData: [{\n            type: 'bd',\n            label: 'Tipo',\n            field: 'tipo_documento'\n          }, {\n            type: 'bd',\n            label: 'Documento',\n            field: 'documento'\n          }, {\n            type: 'bd',\n            label: 'Nombre',\n            field: 'nombre'\n          }, {\n            type: 'bd',\n            label: 'Email',\n            field: 'email'\n          }, {\n            type: 'bd',\n            label: 'Rol',\n            field: 'rol'\n          }, {\n            type: 'bd',\n            label: 'Direccion',\n            field: 'direccion'\n          }, {\n            type: 'bd',\n            label: 'Telefono',\n            field: 'telefono'\n          }, botonAccesos],\n          sqlParams: sqlParams,\n          automatica: \"true\",\n          botonNuevo: \"true\",\n          botonesExportar: \"true\",\n          formFields: [{\n            label: 'Tipo de Documento',\n            field: 'id_tipo_documento',\n            type: 'select',\n            validation: '',\n            required: 'true',\n            dinamic: 'true',\n            apiField: 'document_types',\n            valueName: 'nombre',\n            sqlParams: {\n              sqlCols: ['id', 'nombre']\n            }\n          }, {\n            label: 'Documento',\n            field: 'documento',\n            type: 'text',\n            validation: 'entero',\n            required: 'true'\n          }, {\n            label: 'Primer Nombre',\n            field: 'primer_nombre',\n            type: 'text',\n            validation: 'mayusculas',\n            required: 'true'\n          }, {\n            label: 'Segundo Nombre',\n            field: 'segundo_nombre',\n            type: 'text',\n            validation: 'mayusculas',\n            required: 'false'\n          }, {\n            label: 'Primer Apellido',\n            field: 'primer_apellido',\n            type: 'text',\n            validation: 'mayusculas',\n            required: 'true'\n          }, {\n            label: 'Segundo Apellido',\n            field: 'segundo_apellido',\n            type: 'text',\n            validation: 'mayusculas',\n            required: 'false'\n          }, {\n            label: 'Rol de Seguridad',\n            field: 'id_rol',\n            type: 'select',\n            validation: '',\n            required: 'true',\n            dinamic: 'true',\n            apiField: 'roles',\n            valueName: 'nombre',\n            sqlParams: {\n              sqlCols: ['id', 'nombre'],\n              sqlWhere: [' AND id > 1 ']\n            }\n          }, {\n            label: 'Correo Electronico',\n            field: 'email',\n            type: 'text',\n            validation: 'email',\n            required: 'true'\n          }, {\n            label: 'Direccion',\n            field: 'direccion',\n            type: 'text',\n            validation: 'mayusculas',\n            required: 'true'\n          }, {\n            label: 'Telefono',\n            field: 'telefono',\n            type: 'text',\n            validation: 'mayusculas',\n            required: 'true'\n          }, {\n            label: '',\n            field: 'id_empresa',\n            type: 'campo_empresa',\n            validation: '',\n            required: 'true'\n          }],\n          apiField: 'users',\n          mainContainer: \"Users\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        })), React.createElement(Window, {\n          id: \"windowAccesoEmpresas\",\n          title: \"Configurar Accesos\",\n          width: \"315px\",\n          height: \"80%\",\n          tbar: [{\n            type: 'boton',\n            icon: 'save',\n            width: '100px',\n            height: '60px',\n            title: 'Guardar',\n            function: this.guardaAccesosEmpresas.bind(this)\n          }],\n          componente: \"WindowAccesoEmpresas\",\n          params: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }))\n      );\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nexport default Users;","map":{"version":3,"sources":["F:\\PROYECTOS\\recicla\\src\\components\\control_panel\\Users.js"],"names":["React","Component","DataGrid","globalState","guardaAccesoEmpresas","Window","modalLoading","TBar","alertify","Users","props","funcionClick","idUser","dispatch","type","params","visible","idWin","objEmpresas","getState","configEmpresas","objWindow","windowAccesoEmpresas","arrayAccesoEmpresas","id","push","then","response","catch","error","alert","idRol","botonAccesos","label","icon","colFuncion","bind","sqlParams","sqlCols","sqlJoin","sqlWhere","fieldSearch","sqlEmpresa","width","height","title","display","function","retrocederPanel","top","position","parametro","field","validation","required","dinamic","apiField","valueName","guardaAccesosEmpresas"],"mappings":"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","sourcesContent":["/**\r\n* CLASS Users\r\n*\r\n* Contiene el contenedor principal de los usuarios\r\n*\r\n* @author Hector Morales <warrior1987@gmail.com>\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport DataGrid from '../data_grid/DataGrid';\r\nimport globalState from '../configuration/GlobalState';\r\nimport {guardaAccesoEmpresas} from '../api_calls/ApiCalls';\r\nimport Window from '../window/Window';\r\nimport {modalLoading} from '../configuration/GlobalFunctions';\r\nimport TBar from '../tbar/TBar';\r\nimport alertify from 'alertifyjs';\r\n\r\nclass Users extends Component {\r\n    retrocederPanel(){\r\n        this.props.funcionClick('ControlPanel');\r\n    }    \r\n    colFuncion(idUser){\r\n        globalState.dispatch({\r\n                type   : \"windowAccesoEmpresas\",\r\n                params : {\r\n                              visible : true,\r\n                              params  : {\r\n                                            idUser : idUser,\r\n                                            idWin  : \"windowAccesoEmpresas\"//identificador de la ventana\r\n                                        }\r\n                         }\r\n            }); \r\n    }\r\n    guardaAccesosEmpresas(){\r\n        var objEmpresas = globalState.getState().configEmpresas;\r\n        var objWindow   = globalState.getState().windowAccesoEmpresas;\r\n        var arrayAccesoEmpresas = [];\r\n        for(var id in objEmpresas){\r\n            if(objEmpresas[id] === true){\r\n                arrayAccesoEmpresas.push(id);                \r\n            }\r\n        }\r\n        modalLoading(true);\r\n        guardaAccesoEmpresas(objWindow.params.idUser,arrayAccesoEmpresas).then(response => { \r\n            modalLoading(false);\r\n            globalState.dispatch({\r\n                type   : \"windowAccesoEmpresas\",\r\n                params : {\r\n                              visible : false,                              \r\n                         }\r\n            });\r\n        })\r\n        .catch(function (error) {\r\n            modalLoading(false);\r\n            alertify.alert('Error!', 'No se ha logrado la conexion con el servidor!<br />'+error);\r\n        });\r\n    }\r\n    render() {\r\n        var idRol = globalState.getState().idRol;\r\n        var botonAccesos = '';\r\n        if(idRol === 1){\r\n            botonAccesos = {\r\n                                type  : 'manual',\r\n                                label : '',\r\n                                icon  : 'settings',\r\n                                colFuncion : this.colFuncion.bind(this)\r\n                            }\r\n        } \r\n        let sqlParams = {\r\n                            sqlCols : [\r\n                                'T1.id',\r\n                                'T1.id_tipo_documento',\r\n                                'DT.nombre AS tipo_documento',\r\n                                'T1.documento',\r\n                                'T1.nombre',\r\n                                'T1.primer_nombre',\r\n                                'T1.segundo_nombre',\r\n                                'T1.primer_apellido',\r\n                                'T1.segundo_apellido',\r\n                                'T1.email',\r\n                                'T1.direccion',\r\n                                'T1.telefono',\r\n                                'T1.id_rol',\r\n                                'RL.nombre AS rol',\r\n                                'T1.imagen_usuario'\r\n                            ],                                                      \r\n                            sqlJoin : [\r\n                                'INNER JOIN document_types AS DT ON (DT.id = T1.id_tipo_documento)', \r\n                                'INNER JOIN roles AS RL ON (RL.id = T1.id_rol)' \r\n                            ],\r\n                            sqlWhere : [\r\n                                ' AND T1.id_rol > 1 '\r\n                            ],\r\n                            fieldSearch : [\r\n                                'T1.nombre',\r\n                                'T1.documento',\r\n                                'T1.email',\r\n                                'T1.direccion',\r\n                                'T1.telefono',                                \r\n                            ],\r\n                            sqlEmpresa : \"true\"                                                                           \r\n                        }             \r\n        return (//carga el componente que contiene la grilla de datos         \r\n            <div>\r\n                <TBar\r\n                    items={[\r\n                              {\r\n                                  type : 'boton',\r\n                                  icon : 'arrow_back',\r\n                                  width : '100px',\r\n                                  height : '60px',\r\n                                  title : 'Atras',\r\n                                  display : true,\r\n                                  function : this.retrocederPanel.bind(this)\r\n                              },\r\n                          ]}\r\n                    length = '1'\r\n                />\r\n                <div style={{top: \"60px\",position:\"relative\"}}>           \r\n                    <DataGrid titulo='Usuarios' \r\n                              funcionClick={this.props.funcionClick}  \r\n                              parametro={this.props.parametro}                      \r\n                              colsData={[ \r\n                                              {\r\n                                                  type  : 'bd',\r\n                                                  label : 'Tipo',\r\n                                                  field : 'tipo_documento'\r\n                                              },\r\n                                              {\r\n                                                  type  : 'bd',\r\n                                                  label : 'Documento',\r\n                                                  field : 'documento'\r\n                                              },\r\n                                              {\r\n                                                  type  : 'bd',\r\n                                                  label : 'Nombre',\r\n                                                  field : 'nombre'\r\n                                              },\r\n                                              {\r\n                                                  type  : 'bd',\r\n                                                  label : 'Email',\r\n                                                  field : 'email'\r\n                                              },\r\n                                              {\r\n                                                  type  : 'bd',\r\n                                                  label : 'Rol',\r\n                                                  field : 'rol'\r\n                                              },\r\n                                              {\r\n                                                  type  : 'bd',\r\n                                                  label : 'Direccion',\r\n                                                  field : 'direccion'\r\n                                              },\r\n                                              {\r\n                                                  type  : 'bd',\r\n                                                  label : 'Telefono',\r\n                                                  field : 'telefono'\r\n                                              },\r\n                                              botonAccesos\r\n                                           ]}\r\n                              sqlParams = { sqlParams } \r\n                              automatica=\"true\"\r\n                              botonNuevo=\"true\"\r\n                              botonesExportar=\"true\"\r\n                              formFields={[\r\n                                            {\r\n                                                label : 'Tipo de Documento',\r\n                                                field : 'id_tipo_documento',\r\n                                                type  : 'select',\r\n                                                validation : '',\r\n                                                required : 'true',\r\n                                                dinamic : 'true',\r\n                                                apiField : 'document_types',\r\n                                                valueName : 'nombre',\r\n                                                sqlParams : {\r\n                                                                sqlCols : [\r\n                                                                    'id',\r\n                                                                    'nombre'                                \r\n                                                                ],                                                                                                       \r\n                                                            }\r\n                                            },                                    \r\n                                            {\r\n                                                label : 'Documento',\r\n                                                field : 'documento',\r\n                                                type  : 'text',\r\n                                                validation : 'entero',\r\n                                                required : 'true'                                        \r\n                                            },\r\n                                            {\r\n                                                label : 'Primer Nombre',\r\n                                                field : 'primer_nombre',\r\n                                                type  : 'text',\r\n                                                validation : 'mayusculas',\r\n                                                required : 'true'\r\n                                            },\r\n                                            {\r\n                                                label : 'Segundo Nombre',\r\n                                                field : 'segundo_nombre',\r\n                                                type  : 'text',\r\n                                                validation : 'mayusculas',\r\n                                                required : 'false'\r\n                                            },\r\n                                            {\r\n                                                label : 'Primer Apellido',\r\n                                                field : 'primer_apellido',\r\n                                                type  : 'text',\r\n                                                validation : 'mayusculas',\r\n                                                required : 'true'\r\n                                            },\r\n                                            {\r\n                                                label : 'Segundo Apellido',\r\n                                                field : 'segundo_apellido',\r\n                                                type  : 'text',\r\n                                                validation : 'mayusculas',\r\n                                                required : 'false'\r\n                                            },\r\n                                            {\r\n                                                label : 'Rol de Seguridad',\r\n                                                field : 'id_rol',\r\n                                                type  : 'select',\r\n                                                validation : '',\r\n                                                required : 'true',\r\n                                                dinamic : 'true',\r\n                                                apiField : 'roles',\r\n                                                valueName : 'nombre',\r\n                                                sqlParams : {\r\n                                                                sqlCols : [\r\n                                                                    'id',\r\n                                                                    'nombre'                                \r\n                                                                ],\r\n                                                                sqlWhere : [\r\n                                                                    ' AND id > 1 '\r\n                                                                ],                                                                                                                                                                 \r\n                                                            }                                            \r\n                                            },\r\n                                            {\r\n                                                label : 'Correo Electronico',\r\n                                                field : 'email',\r\n                                                type  : 'text',\r\n                                                validation : 'email',\r\n                                                required : 'true'\r\n                                            },\r\n                                            {\r\n                                                label : 'Direccion',\r\n                                                field : 'direccion',\r\n                                                type  : 'text',\r\n                                                validation : 'mayusculas',\r\n                                                required : 'true'\r\n                                            },\r\n                                            {\r\n                                                label : 'Telefono',\r\n                                                field : 'telefono',\r\n                                                type  : 'text',\r\n                                                validation : 'mayusculas',\r\n                                                required : 'true'\r\n                                            },\r\n                                            {\r\n                                                label : '',\r\n                                                field : 'id_empresa',\r\n                                                type  : 'campo_empresa',\r\n                                                validation : '',\r\n                                                required : 'true'                                        \r\n                                            },\r\n                                        ]}                     \r\n                              apiField = {'users'}\r\n                              mainContainer='Users'/>\r\n                 </div>\r\n                 <Window \r\n                      id = \"windowAccesoEmpresas\"                      \r\n                      title='Configurar Accesos'\r\n                      width='315px' \r\n                      height='80%'\r\n                      tbar={[\r\n                                {\r\n                                    type : 'boton',\r\n                                    icon : 'save',\r\n                                    width : '100px',\r\n                                    height : '60px',\r\n                                    title : 'Guardar',\r\n                                    function : this.guardaAccesosEmpresas.bind(this)\r\n                                },\r\n                            ]}\r\n                      componente=\"WindowAccesoEmpresas\"\r\n                      params=\"\" \r\n                  />\r\n            </div>\r\n        )\r\n    } \r\n}\r\n\r\nexport default Users\r\n"]},"metadata":{},"sourceType":"module"}